name: Release
permissions: {}
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

jobs:
  publish:
    name: Build container image and publish on push tag
    permissions:
      packages: write # for ghcr
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup common
        uses: ./.github/actions/common
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup buildx
        uses: ./.github/actions/setup-buildx
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/pixiv/k8s-job-wrapper
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/' )}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  generate:
    name: Generate chart package
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - publish
    outputs:
      chart-package-file: ${{ steps.generate-chart.outputs.chart-package-file }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup common
        uses: ./.github/actions/common
      - name: Setup go
        uses: ./.github/actions/setup-go
        with:
          version: '${{ env.GO_VERSION }}'
      - name: Setup chart meta for release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          # remove 'v' for chart version
          echo "RELEASE_CHART_VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"
          echo "RELEASE_IMAGE_NAME=ghcr.io/pixiv/k8s-job-wrapper" >> "$GITHUB_ENV"
          echo "RELEASE_IMAGE_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
      - name: Setup chart meta for testing
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "RELEASE_CHART_VERSION=0.0.0" >> "$GITHUB_ENV"
          echo "RELEASE_IMAGE_NAME=$CONTROLLER_IMAGE_NAME" >> "$GITHUB_ENV"
          echo "RELEASE_IMAGE_TAG=$CONTROLLER_IMAGE_TAG" >> "$GITHUB_ENV"
      - name: Generate chart
        id: generate-chart
        run: |
          ./hack/chart/make.sh "$RELEASE_CHART_VERSION" "$RELEASE_IMAGE_NAME" "$RELEASE_IMAGE_TAG" "$CHART_PACKAGE_DIR"
          name="k8s-job-wrapper-${RELEASE_CHART_VERSION}.tgz"
          echo "chart-package-file=${name}" >> "$GITHUB_OUTPUT"
          echo "chart-package-path=${CHART_PACKAGE_DIR}/${name}" >> "$GITHUB_OUTPUT"
      - name: Upload chart package
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: chart-package
          path: ${{ steps.generate-chart.outputs.chart-package-path }}
          retention-days: 1

  release:
    name: Release chart on push tag
    permissions:
      packages: write # for ghcr
      contents: write # for github release
    runs-on: ubuntu-latest
    needs:
      - generate
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup common
        uses: ./.github/actions/common
      - name: Setup go
        uses: ./.github/actions/setup-go
        with:
          version: '${{ env.GO_VERSION }}'
      - name: Download chart package
        uses: actions/download-artifact@v5
        with:
          name: chart-package
      - name: Setup kind
        uses: ./.github/actions/setup-kind
        with:
          node_image: '${{ env.KIND_NODE_IMAGE }}'
      - name: Install chart for testing
        run: |
          ./hack/tools.sh helm install test "${{ needs.generate.outputs.chart-package-file }}"
      - name: Check status
        run: ./hack/tools.sh helm status test
      - name: Fetch history
        run: git fetch --prune --unshallow
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push chart
        run: |
          ./hack/tools.sh helm push "${{ needs.generate.outputs.chart-package-file }}" "oci://ghcr.io/pixiv/k8s-job-wrapper/charts"
      - name: Create release
        run: |
          gh release create "$GITHUB_REF_NAME" --verify-tag --generate-notes "${{ needs.generate.outputs.chart-package-file }}"
        env:
          GH_TOKEN: ${{ github.token }}

  pages:
    name: Deploy CRD document
    permissions:
      pages: write
      id-token: write # to verify deployment
      contents: read
    runs-on: ubuntu-latest
    needs:
      - release
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup common
        uses: ./.github/actions/common
      - name: Setup go
        uses: ./.github/actions/setup-go
        with:
          version: '${{ env.GO_VERSION }}'
      - name: Generate CRD document
        id: generate-docs
        run: |
          ./hack/make-docs.sh "$CRD_DOCS_DIR"
          echo "docs-package-path=${CRD_DOCS_DIR}" >> "$GITHUB_OUTPUT"
      - name: Upload CRD document
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.generate-docs.outputs.docs-package-path }}/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
