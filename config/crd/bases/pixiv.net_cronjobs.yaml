---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: cronjobs.pixiv.net
spec:
  group: pixiv.net
  names:
    kind: CronJob
    listKind: CronJobList
    plural: cronjobs
    singular: cronjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.profile.cronJobParams.schedule
      name: Schedule
      type: string
    - jsonPath: .spec.profile.cronJobParams.timeZone
      name: Timezone
      type: string
    - jsonPath: .spec.profile.cronJobParams.suspend
      name: Suspend
      type: boolean
    - jsonPath: .spec.profile.jobProfile.podProfileRef
      name: Profile
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          CronJob represents a template of `cronjobs.v1.batch`.

          CronJob generates `cronjobs.v1.batch.spec` from `spec.jobProfile`,
          and then combines it with `spec.schedule`, `spec.timeZone`, ... to produce `cronjobs.v1.batch`.

          The generated `cronjobs.v1.batch` will always have the following labels applied:

            - `app.kubernetes.io/created-by=pixiv-job-controller`
            - `cronjobs.pixiv.net/name=$NAME_OF_CRONJOB`

          Where `$NAME_OF_CRONJOB` is the `metadata.name`.

          The generated `cronjobs.v1.batch` will have the suffix `-pxvcjob` appended to its name.
          The maximum length of `metadata.name` of `cronjobs.v1.batch` is 52 characters.
          Therefore, the maximum length of `metadata.name` of [CronJob] is 44 characters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CronJobSpec defines the desired state of CronJob.
            properties:
              concurrencyPolicy:
                default: Allow
                description: |-
                  Specifies how to treat concurrent executions of a Job.
                  Valid values are:

                  - "Allow" (default): allows CronJobs to run concurrently;
                  - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet;
                  - "Replace": cancels currently running job and replaces it with a new one
                type: string
              cronJobMetadata:
                description: Additional `cronjobs.v1.batch.metadata`.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Additional annotations for generated `cronjobs.v1.batch`.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Additional labels for generated `cronjobs.v1.batch`.
                    type: object
                type: object
              failedJobsHistoryLimit:
                default: 1
                description: |-
                  The number of failed finished jobs to retain.
                  This is a pointer to distinguish between explicit zero and not specified.
                format: int32
                type: integer
              jobProfile:
                properties:
                  jobMetadata:
                    description: Additional `jobs.v1.batch.metadata`.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Additional annotations for generated `jobs.v1.batch`.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Additional labels for generated `jobs.v1.batch`.
                        type: object
                    type: object
                  jobParams:
                    description: '`jobs.v1.batch.spec` configuration options.'
                    properties:
                      activeDeadlineSeconds:
                        description: |-
                          Specifies the duration in seconds relative to the startTime that the job
                          may be continuously active before the system tries to terminate it; value
                          must be positive integer. If a Job is suspended (at creation or through an
                          update), this timer will effectively be stopped and reset when the Job is
                          resumed again.
                        format: int64
                        type: integer
                      backoffLimit:
                        default: 6
                        description: |-
                          Specifies the number of retries before marking this job failed.
                          Defaults to 6
                        format: int32
                        type: integer
                      backoffLimitPerIndex:
                        description: |-
                          Specifies the limit for the number of retries within an
                          index before marking this index as failed. When enabled the number of
                          failures per index is kept in the pod's
                          batch.kubernetes.io/job-index-failure-count annotation. It can only
                          be set when Job's completionMode=Indexed, and the Pod's restart
                          policy is Never. The field is immutable.
                          This field is beta-level. It can be used when the `JobBackoffLimitPerIndex`
                          feature gate is enabled (enabled by default).
                        format: int32
                        type: integer
                      completionMode:
                        default: NonIndexed
                        description: |-
                          completionMode specifies how Pod completions are tracked. It can be
                          `NonIndexed` (default) or `Indexed`.

                          `NonIndexed` means that the Job is considered complete when there have
                          been .spec.completions successfully completed Pods. Each Pod completion is
                          homologous to each other.

                          `Indexed` means that the Pods of a
                          Job get an associated completion index from 0 to (.spec.completions - 1),
                          available in the annotation batch.kubernetes.io/job-completion-index.
                          The Job is considered complete when there is one successfully completed Pod
                          for each index.
                          When value is `Indexed`, .spec.completions must be specified and
                          `.spec.parallelism` must be less than or equal to 10^5.
                          In addition, The Pod name takes the form
                          `$(job-name)-$(index)-$(random-string)`,
                          the Pod hostname takes the form `$(job-name)-$(index)`.

                          More completion modes can be added in the future.
                          If the Job controller observes a mode that it doesn't recognize, which
                          is possible during upgrades due to version skew, the controller
                          skips updates for the Job.
                        type: string
                      completions:
                        description: |-
                          Specifies the desired number of successfully finished pods the
                          job should be run with.  Setting to null means that the success of any
                          pod signals the success of all pods, and allows parallelism to have any positive
                          value.  Setting to 1 means that parallelism is limited to 1 and the success of that
                          pod signals the success of the job.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
                        format: int32
                        type: integer
                      managedBy:
                        description: |-
                          ManagedBy field indicates the controller that manages a Job. The k8s Job
                          controller reconciles jobs which don't have this field at all or the field
                          value is the reserved string `kubernetes.io/job-controller`, but skips
                          reconciling Jobs with a custom value for this field.
                          The value must be a valid domain-prefixed path (e.g. acme.io/foo) -
                          all characters before the first "/" must be a valid subdomain as defined
                          by RFC 1123. All characters trailing the first "/" must be valid HTTP Path
                          characters as defined by RFC 3986. The value cannot exceed 63 characters.
                          This field is immutable.

                          This field is alpha-level. The job controller accepts setting the field
                          when the feature gate JobManagedBy is enabled (disabled by default).
                        type: string
                      manualSelector:
                        description: |-
                          manualSelector controls generation of pod labels and pod selectors.
                          Leave `manualSelector` unset unless you are certain what you are doing.
                          When false or unset, the system pick labels unique to this job
                          and appends those labels to the pod template.  When true,
                          the user is responsible for picking unique labels and specifying
                          the selector.  Failure to pick a unique label may cause this
                          and other jobs to not function correctly.  However, You may see
                          `manualSelector=true` in jobs that were created with the old `extensions/v1beta1`
                          API.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
                        type: boolean
                      maxFailedIndexes:
                        description: |-
                          Specifies the maximal number of failed indexes before marking the Job as
                          failed, when backoffLimitPerIndex is set. Once the number of failed
                          indexes exceeds this number the entire Job is marked as Failed and its
                          execution is terminated. When left as null the job continues execution of
                          all of its indexes and is marked with the `Complete` Job condition.
                          It can only be specified when backoffLimitPerIndex is set.
                          It can be null or up to completions. It is required and must be
                          less than or equal to 10^4 when is completions greater than 10^5.
                          This field is beta-level. It can be used when the `JobBackoffLimitPerIndex`
                          feature gate is enabled (enabled by default).
                        format: int32
                        type: integer
                      parallelism:
                        description: |-
                          Specifies the maximum desired number of pods the job should
                          run at any given time. The actual number of pods running in steady state will
                          be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism),
                          i.e. when the work left to do is less than max parallelism.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
                        format: int32
                        type: integer
                      podFailurePolicy:
                        description: |-
                          Specifies the policy of handling failed pods. In particular, it allows to
                          specify the set of actions and conditions which need to be
                          satisfied to take the associated action.
                          If empty, the default behaviour applies - the counter of failed pods,
                          represented by the jobs's .status.failed field, is incremented and it is
                          checked against the backoffLimit. This field cannot be used in combination
                          with restartPolicy=OnFailure.
                        properties:
                          rules:
                            description: |-
                              A list of pod failure policy rules. The rules are evaluated in order.
                              Once a rule matches a Pod failure, the remaining of the rules are ignored.
                              When no rule matches the Pod failure, the default handling applies - the
                              counter of pod failures is incremented and it is checked against
                              the backoffLimit. At most 20 elements are allowed.
                            items:
                              description: |-
                                PodFailurePolicyRule describes how a pod failure is handled when the requirements are met.
                                One of onExitCodes and onPodConditions, but not both, can be used in each rule.
                              properties:
                                action:
                                  description: |-
                                    Specifies the action taken on a pod failure when the requirements are satisfied.
                                    Possible values are:

                                    - FailJob: indicates that the pod's job is marked as Failed and all
                                      running pods are terminated.
                                    - FailIndex: indicates that the pod's index is marked as Failed and will
                                      not be restarted.
                                      This value is beta-level. It can be used when the
                                      `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).
                                    - Ignore: indicates that the counter towards the .backoffLimit is not
                                      incremented and a replacement pod is created.
                                    - Count: indicates that the pod is handled in the default way - the
                                      counter towards the .backoffLimit is incremented.
                                    Additional values are considered to be added in the future. Clients should
                                    react to an unknown action by skipping the rule.
                                  type: string
                                onExitCodes:
                                  description: Represents the requirement on the container
                                    exit codes.
                                  properties:
                                    containerName:
                                      description: |-
                                        Restricts the check for exit codes to the container with the
                                        specified name. When null, the rule applies to all containers.
                                        When specified, it should match one the container or initContainer
                                        names in the pod template.
                                      type: string
                                    operator:
                                      description: |-
                                        Represents the relationship between the container exit code(s) and the
                                        specified values. Containers completed with success (exit code 0) are
                                        excluded from the requirement check. Possible values are:

                                        - In: the requirement is satisfied if at least one container exit code
                                          (might be multiple if there are multiple containers not restricted
                                          by the 'containerName' field) is in the set of specified values.
                                        - NotIn: the requirement is satisfied if at least one container exit code
                                          (might be multiple if there are multiple containers not restricted
                                          by the 'containerName' field) is not in the set of specified values.
                                        Additional values are considered to be added in the future. Clients should
                                        react to an unknown operator by assuming the requirement is not satisfied.
                                      type: string
                                    values:
                                      description: |-
                                        Specifies the set of values. Each returned container exit code (might be
                                        multiple in case of multiple containers) is checked against this set of
                                        values with respect to the operator. The list of values must be ordered
                                        and must not contain duplicates. Value '0' cannot be used for the In operator.
                                        At least one element is required. At most 255 elements are allowed.
                                      items:
                                        format: int32
                                        type: integer
                                      type: array
                                      x-kubernetes-list-type: set
                                  required:
                                  - operator
                                  - values
                                  type: object
                                onPodConditions:
                                  description: |-
                                    Represents the requirement on the pod conditions. The requirement is represented
                                    as a list of pod condition patterns. The requirement is satisfied if at
                                    least one pattern matches an actual pod condition. At most 20 elements are allowed.
                                  items:
                                    description: |-
                                      PodFailurePolicyOnPodConditionsPattern describes a pattern for matching
                                      an actual pod condition type.
                                    properties:
                                      status:
                                        description: |-
                                          Specifies the required Pod condition status. To match a pod condition
                                          it is required that the specified status equals the pod condition status.
                                          Defaults to True.
                                        type: string
                                      type:
                                        description: |-
                                          Specifies the required Pod condition type. To match a pod condition
                                          it is required that specified type equals the pod condition type.
                                        type: string
                                    required:
                                    - status
                                    - type
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - action
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - rules
                        type: object
                      podReplacementPolicy:
                        description: |-
                          podReplacementPolicy specifies when to create replacement Pods.
                          Possible values are:
                          - TerminatingOrFailed means that we recreate pods
                            when they are terminating (has a metadata.deletionTimestamp) or failed.
                          - Failed means to wait until a previously created Pod is fully terminated (has phase
                            Failed or Succeeded) before creating a replacement Pod.

                          When using podFailurePolicy, Failed is the the only allowed value.
                          TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use.
                          This is an beta field. To use this, enable the JobPodReplacementPolicy feature toggle.
                          This is on by default.
                        type: string
                      selector:
                        description: |-
                          A label query over pods that should match the pod count.
                          Normally, the system sets this field for you.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      successPolicy:
                        description: |-
                          successPolicy specifies the policy when the Job can be declared as succeeded.
                          If empty, the default behavior applies - the Job is declared as succeeded
                          only when the number of succeeded pods equals to the completions.
                          When the field is specified, it must be immutable and works only for the Indexed Jobs.
                          Once the Job meets the SuccessPolicy, the lingering pods are terminated.

                          This field is beta-level. To use this field, you must enable the
                          `JobSuccessPolicy` feature gate (enabled by default).
                        properties:
                          rules:
                            description: |-
                              rules represents the list of alternative rules for the declaring the Jobs
                              as successful before `.status.succeeded >= .spec.completions`. Once any of the rules are met,
                              the "SucceededCriteriaMet" condition is added, and the lingering pods are removed.
                              The terminal state for such a Job has the "Complete" condition.
                              Additionally, these rules are evaluated in order; Once the Job meets one of the rules,
                              other rules are ignored. At most 20 elements are allowed.
                            items:
                              description: |-
                                SuccessPolicyRule describes rule for declaring a Job as succeeded.
                                Each rule must have at least one of the "succeededIndexes" or "succeededCount" specified.
                              properties:
                                succeededCount:
                                  description: |-
                                    succeededCount specifies the minimal required size of the actual set of the succeeded indexes
                                    for the Job. When succeededCount is used along with succeededIndexes, the check is
                                    constrained only to the set of indexes specified by succeededIndexes.
                                    For example, given that succeededIndexes is "1-4", succeededCount is "3",
                                    and completed indexes are "1", "3", and "5", the Job isn't declared as succeeded
                                    because only "1" and "3" indexes are considered in that rules.
                                    When this field is null, this doesn't default to any value and
                                    is never evaluated at any time.
                                    When specified it needs to be a positive integer.
                                  format: int32
                                  type: integer
                                succeededIndexes:
                                  description: |-
                                    succeededIndexes specifies the set of indexes
                                    which need to be contained in the actual set of the succeeded indexes for the Job.
                                    The list of indexes must be within 0 to ".spec.completions-1" and
                                    must not contain duplicates. At least one element is required.
                                    The indexes are represented as intervals separated by commas.
                                    The intervals can be a decimal integer or a pair of decimal integers separated by a hyphen.
                                    The number are listed in represented by the first and last element of the series,
                                    separated by a hyphen.
                                    For example, if the completed indexes are 1, 3, 4, 5 and 7, they are
                                    represented as "1,3-5,7".
                                    When this field is null, this field doesn't default to any value
                                    and is never evaluated at any time.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - rules
                        type: object
                      suspend:
                        default: false
                        description: |-
                          suspend specifies whether the Job controller should create Pods or not. If
                          a Job is created with suspend set to true, no Pods are created by the Job
                          controller. If a Job is suspended after creation (i.e. the flag goes from
                          false to true), the Job controller will delete all active Pods associated
                          with this Job. Users must design their workload to gracefully handle this.
                          Suspending a Job will reset the StartTime field of the Job, effectively
                          resetting the ActiveDeadlineSeconds timer too. Defaults to false.
                        type: boolean
                      ttlSecondsAfterFinished:
                        description: |-
                          ttlSecondsAfterFinished limits the lifetime of a Job that has finished
                          execution (either Complete or Failed). If this field is set,
                          ttlSecondsAfterFinished after the Job finishes, it is eligible to be
                          automatically deleted. When the Job is being deleted, its lifecycle
                          guarantees (e.g. finalizers) will be honored. If this field is unset,
                          the Job won't be automatically deleted. If this field is set to zero,
                          the Job becomes eligible to be deleted immediately after it finishes.

                          When CRD [Job] uses this, even if the TTL is expired, one [Job](https://kubernetes.io/ja/docs/concepts/workloads/controllers/job/) will remain. It will be reflected in
                          the `jobs.pixiv.net/ttl-seconds-after-finished` annotation instead of `jobs.v1.batch.spec.ttlSecondsAfterFinished`.
                        format: int32
                        type: integer
                    type: object
                  patches:
                    description: Patches to be applied to `template` of [PodProfile].
                    items:
                      description: |-
                        JobPatch defines the [patch] to be applied to template of PodProfile.
                        For examples, rename container:
                        <pre><code>op: replace
                        path: /spec/containers/0/name
                        value: simple
                        </code></pre>

                        Replace command:
                        <pre><code>op: replace
                        path: /spec/containers/0/command
                        value: ["perl", "-Mbignum=bpi", "-wle", "print bpi(100)"]
                        </code></pre>

                        [patch]: https://datatracker.ietf.org/doc/html/rfc6902
                      properties:
                        from:
                          type: string
                        op:
                          description: Operation to perform.
                          type: string
                        path:
                          description: |-
                            JSON-pointer that references a location within the template where the operation is performed.
                            The root of path will be `jobs.v1.batch.spec.template`.
                          type: string
                        value:
                          description: Any yaml object.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - op
                      - path
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  podProfileRef:
                    description: Name of [PodProfile] that this refers to.
                    type: string
                required:
                - podProfileRef
                type: object
              schedule:
                description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                type: string
              startingDeadlineSeconds:
                description: |-
                  Optional deadline in seconds for starting the job if it misses scheduled
                  time for any reason.  Missed jobs executions will be counted as failed ones.
                format: int64
                type: integer
              successfulJobsHistoryLimit:
                default: 3
                description: |-
                  The number of successful finished jobs to retain.
                  This is a pointer to distinguish between explicit zero and not specified.
                format: int32
                type: integer
              suspend:
                default: false
                description: |-
                  This flag tells the controller to suspend subsequent executions, it does
                  not apply to already started executions. Defaults to false.
                type: boolean
              timeZone:
                description: |-
                  The time zone name for the given schedule, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
                  If not specified, this will default to the time zone of the kube-controller-manager process.
                  The set of valid time zone names and the time zone offset is loaded from the system-wide time zone
                  database by the API server during CronJob validation and the controller manager during execution.
                  If no system-wide time zone database can be found a bundled version of the database is used instead.
                  If the time zone name becomes invalid during the lifetime of a CronJob or due to a change in host
                  configuration, the controller will stop creating new new Jobs and will create a system event with the
                  reason UnknownTimeZone.
                  More information can be found in https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones
                type: string
            required:
            - jobProfile
            - schedule
            type: object
          status:
            description: CronJobStatus defines the observed state of CronJob.
            properties:
              collisionCount:
                description: |-
                  Count of hash collisions for the Job. The Job controller uses this
                  field as a collision avoidance mechanism when it needs to create the name for the
                  newest `jobs.v1.batch`.
                format: int32
                type: integer
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
        x-kubernetes-validations:
        - message: must be no more than 44 characters
          rule: self.metadata.name.size() <= 44
    served: true
    storage: true
    subresources:
      status: {}
