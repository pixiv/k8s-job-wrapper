#!/bin/bash

readonly d="$(cd "$(dirname "$0")" || exit ; pwd)"
readonly tools="${d}/../tools.sh"

log() {
    echo >&2 "$(basename "$0"): $*"
}

# Needed to link to the standard resource documentation for a specific Kubernetes version.
# $1: kubernetes version
generate_config() {
    local -r version="$1"
    cat <<EOS
render:
  kubernetesVersion: ${version}
EOS
}

docs() {
    "$tools" crd-ref-docs "$@"
}

pandoc() {
    "$tools" pandoc "$@"
}

generate_examples() {
    "${d}/examples/generate.sh"
}

# Generate documentation from the CRD.
# $1: config of crd-ref-docs
# $2: directory of go files of CRD
# $3: destination file
generate_docs() {
    local -r __config="$1"
    local -r __source="$2"
    local -r __output="$3"
    docs \
        --config="$__config" \
        --source-path="$__source" \
        --output-mode single \
        --renderer markdown \
        --output-path "$__output"
}

# Inject the overview and manifest examples right under the first heading of the markdown purely generated from the CRD.
# $1: destination markdown file
insert_summary_and_examples() {
    local -r __out_md="$1"
    # add a comment to indicate that this is an auto-generated markdown file
    echo '<!-- Generated by tool. DO NOT EDIT. -->'
    # first heading
    head -n 1 "$__out_md"
    # overview
    cat <<EOS
This is a custom resource for efficiently generating multiple similar [Job](https://kubernetes.io/docs/concepts/workloads/controllers/job/) and [CronJob](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/) manifests in the form of a common part and a set of differences.

- The [PodProfile CRD](#podprofile) allows you to define a Pod's spec as the common part.
- The [Job CRD](#job) can generate a [Job](https://kubernetes.io/docs/concepts/workloads/controllers/job/). It includes parameters for the Job and a patch for the [PodProfile CRD](#podprofile).
- The [CronJob CRD](#cronjob) can generate a [CronJob](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/). It includes parameters for the CronJob and a patch for the [PodProfile CRD](#podprofile).

To use k8s-job-wrapper with kustomize, add [transform.yaml](./kustomize/transform.yaml) to the configurations section of your kustomization.yaml.

<pre><code>configurations:
  - https://pixiv.github.io/k8s-job-wrapper/kustomize/transform.yaml
</code></pre>
EOS
    # without a line break, the "examples" heading disappears
    echo
    generate_examples
    # remaining
    tail -n +2 "$__out_md"
}

copy_assets() {
    local -r __dest="$1"
    cp -r "${d}/kustomize" "$__dest"
}

# Generate css file.
# $1: URL of the external css file
# $2: local css file
generate_css() {
    local -r __url="$1"
    local -r __file="$2"
    curl -o- -s -L "$__url"
    cat "$__file"
}

# Convert markdown into html.
# $1: markdown file
# $2: css file
# $3: html title
generate_html() {
    local -r __out_md="$1"
    local -r __css="$2"
    local -r __title="$3"
    pandoc \
        "${__out_md}" \
        --standalone \
        --embed-resources \
        --toc \
        --toc-depth=4 \
        --css "${__css}" \
        --metadata title="${__title}"
}

generate_script() {
    local -r __js="$1"
    echo "<script>"
    cat "${__js}"
    echo "</script>"
}

set -e
set -o pipefail

readonly dest="$1"
readonly k8s_version="$2"
if [[ -z "$dest" ]] ; then
    log "dest (\$1) is required!"
    exit 1
fi
if [[ -z "$k8s_version" ]] ; then
    log "k8s_version (\$2) is required!"
    exit 1
fi

readonly title="CRD of pixiv.net"
readonly source_path="${d}/../../api/v1"
# base css
readonly css_url="http://thomasf.github.io/solarized-css/solarized-light.min.css"
# addtional css
readonly css_file="${d}/docs.css"
# additional js
readonly js_file="${d}/docs.js"


readonly config="$(mktemp)"
generate_config "${k8s_version}" > "$config"
readonly css="$(mktemp)"
generate_css "${css_url}" "${css_file}" > "${css}"

docs --version
readonly tmp_out_md="$(mktemp)"
generate_docs "${config}" "${source_path}" "${tmp_out_md}"
readonly out_md="${d}/docs.md"
insert_summary_and_examples "${tmp_out_md}" > "${out_md}"
generate_script "${js_file}" >> "${out_md}"
copy_assets "$dest"
generate_html "${out_md}" "${css}" "${title}" > "${dest}/index.html"
